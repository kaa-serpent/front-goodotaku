{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString($data.posts), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: post.id\n    }, [_createElementVNode(\"li\", null, _toDisplayString(post[_ctx.id]), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(post.body), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAMM,KANN,EAMM,IANN,EAMM,CALFC,oBAAgB,GAAhB,EAAgB,IAAhB,EAAgBC,iBAAXC,WAAW,CAAhB,EAAU;EAAA;EAAV,CAKE,qBAJJH,oBAGKI,SAHL,EAGK,IAHL,EAGKC,YAHcF,WAGd,EAHMG,IAAa,IAAT;yBAAfN,oBAGK,IAHL,EAGK;MAH4BO,GAAG,EAAED,IAAI,CAACE;IAGtC,CAHL,GACEP,oBAAuB,IAAvB,EAAuB,IAAvB,EAAuBC,iBAAhBI,IAAI,CAACG,OAAD,CAAY,CAAvB,EAAc;IAAA;IAAd,GACAR,oBAAsB,GAAtB,EAAsB,IAAtB,EAAsBC,iBAAhBI,IAAI,CAACI,IAAW,CAAtB,EAAe;IAAA;IAAf,EAFF;GAGK,CAHL;;EAAA,CAII,EANN","names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","_Fragment","_renderList","post","key","id","_ctx","body"],"sourceRoot":"","sources":["/home/guillaume/Documents/perso/hitema/projet/goodreads-hitema/goodread/src/views/MangaView.vue"],"sourcesContent":["<template>\n  <div>\n      <p>{{posts}}</p>\n    <ul v-for=\"post in posts\" v-bind:key=\"post.id\">\n      <li>{{ post[id] }}</li>\n      <p>{{ post.body }}</p>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      posts: [],\n    };\n  },\n\n  methods: {\n    async getData() {\n      try {\n        let response = await fetch(\"https://kitsu.io/api/edge/manga\");\n        this.posts = await response.json();;\n        console.log(this.posts);\n        console.log(this.posts);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n\n  created() {\n    this.getData();\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}