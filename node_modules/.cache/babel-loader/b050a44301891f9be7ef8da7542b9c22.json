{"ast":null,"code":"import { createStore } from \"vuex\"; // Appel du plugin axios\n\nconst axios = require(\"axios\"); // Création de la baseURL de l'API\n\n\nconst instance = axios.create({\n  baseURL: \"https://kitsu.io/api/edge/\"\n});\nexport default createStore({\n  state: {\n    animeInfos: {\n      titles: \"\",\n      id: \"\",\n      posterimage: \"\",\n      averageRating: \"\",\n      status: \"\",\n      createdAt: \"\"\n    },\n    animes: [],\n    anime: [],\n    mangaInfos: {\n      titles: \"\",\n      id: \"\",\n      posterimage: \"\",\n      averageRating: \"\",\n      status: \"\",\n      createdAt: \"\"\n    },\n    mangas: [],\n    manga: []\n  },\n  getters: {},\n  mutations: {\n    animeInfos(state, animeInfos) {\n      state.animeInfos = animeInfos;\n    },\n\n    LOAD_ANIMES(state, animes) {\n      state.animes = animes;\n    },\n\n    LOAD_ANIME: function (state, anime) {\n      state.anime = anime;\n    },\n\n    mangaInfos(state, mangaInfos) {\n      state.mangaInfos = mangaInfos;\n    },\n\n    LOAD_MANGAS(state, manga) {\n      state.mangas = manga;\n    },\n\n    LOAD_MANGA: function (state, manga) {\n      state.manga = manga;\n    }\n  },\n  actions: {\n    loadAnimes: ({\n      commit\n    }) => {\n      instance.get(\"anime/\")\n      /*.then(function (response) {\n        commit(response.data);\n        console.log(response.data)\n        this.list = response.data;\n      })*/\n      .then(response => response.data).then(animes => {\n        commit(\"LOAD_ANIMES\", animes.data);\n      }).catch(function (error) {\n        return error;\n      });\n    }\n    /*\n    loadAnimes ({ commit }) {\n    instance\n        .get('anime')\n        .then(response => response.data)\n        .then(animes => {\n            console.log(animes);\n        commit(animes)\n    })\n    }*/\n    ,\n    loadAnime: ({\n      commit\n    }, anime) => {\n      /* instance\n      .get(\"anime/\" + anime.id)\n      .then(response => response.data)\n      .then(anime => {\n        commit('LOAD_ANIME', anime.data);\n        console.log(anime.data)\n      })\n      .catch(function (error) {\n        return error\n      }); */\n      instance.get(\"anime/\" + anime.id).then(function (response) {\n        commit(\"LOAD_ANIME\", response.data);\n      }).catch(function (error) {\n        return error;\n      });\n    },\n    loadMangas: ({\n      commit\n    }) => {\n      console.debug(\"loadMangas\");\n      instance.get(\"manga/\").then(response => response.data).then(mangas => {\n        commit(\"LOAD_MANGAS\", mangas.data);\n      }).catch(function (error) {\n        return error;\n      });\n    },\n    loadManga: ({\n      commit\n    }, manga) => {\n      console.debug(\"loadManga\");\n      instance.get(\"manga/\" + manga.id).then(function (response) {\n        commit(\"LOAD_MANGA\", response.data);\n      }).catch(function (error) {\n        return error;\n      });\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","require","instance","create","baseURL","state","animeInfos","titles","id","posterimage","averageRating","status","createdAt","animes","anime","mangaInfos","mangas","manga","getters","mutations","LOAD_ANIMES","LOAD_ANIME","LOAD_MANGAS","LOAD_MANGA","actions","loadAnimes","commit","get","then","response","data","catch","error","loadAnime","loadMangas","console","debug","loadManga","modules"],"sources":["/home/guillaume/Documents/perso/hitema/projet/goodreads-hitema/goodread/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\n// Appel du plugin axios\nconst axios = require(\"axios\");\n\n// Création de la baseURL de l'API\nconst instance = axios.create({\n  baseURL: \"https://kitsu.io/api/edge/\",\n});\n\nexport default createStore({\n  state: {\n    animeInfos: {\n      titles: \"\",\n      id: \"\",\n      posterimage: \"\",\n      averageRating: \"\",\n      status: \"\",\n      createdAt: \"\",\n    },\n    animes: [],\n    anime: [],\n    \n    mangaInfos: {\n      titles: \"\",\n      id: \"\",\n      posterimage: \"\",\n      averageRating: \"\",\n      status: \"\",\n      createdAt: \"\",\n    },\n    mangas: [],\n    manga: [],\n  },\n  getters: {},\n  mutations: {\n    animeInfos(state, animeInfos) {\n      state.animeInfos = animeInfos;\n    },\n    LOAD_ANIMES(state, animes) {\n      state.animes = animes;\n    },\n    LOAD_ANIME: function (state, anime) {\n      state.anime = anime;\n    },\n    mangaInfos(state, mangaInfos) {\n      state.mangaInfos = mangaInfos;\n    },\n    LOAD_MANGAS(state, manga) {\n      state.mangas = manga;\n    },\n    LOAD_MANGA: function (state, manga) {\n      state.manga = manga;\n    },\n  },\n  actions: {\n    loadAnimes: ({ commit }) => {\n      instance\n        .get(\"anime/\")\n        /*.then(function (response) {\n          commit(response.data);\n          console.log(response.data)\n          this.list = response.data;\n        })*/\n        .then((response) => response.data)\n        .then((animes) => {\n          commit(\"LOAD_ANIMES\", animes.data);\n        })\n        .catch(function (error) {\n          return error;\n        });\n    } /*\n    loadAnimes ({ commit }) {\n      instance\n          .get('anime')\n          .then(response => response.data)\n          .then(animes => {\n              console.log(animes);\n          commit(animes)\n      })\n  }*/,\n    loadAnime: ({ commit }, anime) => {\n      /* instance\n      .get(\"anime/\" + anime.id)\n      .then(response => response.data)\n      .then(anime => {\n        commit('LOAD_ANIME', anime.data);\n        console.log(anime.data)\n      })\n      .catch(function (error) {\n        return error\n      }); */\n      instance\n        .get(\"anime/\" + anime.id)\n        .then(function (response) {\n          commit(\"LOAD_ANIME\", response.data);\n        })\n        .catch(function (error) {\n          return error;\n        });\n    },\n    loadMangas: ({ commit }) => {\n      console.debug(\"loadMangas\");\n      instance\n        .get(\"manga/\")\n        .then((response) => response.data)\n        .then((mangas) => {\n          commit(\"LOAD_MANGAS\", mangas.data);\n        })\n        .catch(function (error) {\n          return error;\n        });\n    },\n    loadManga: ({ commit }, manga) => {\n      console.debug(\"loadManga\");\n      instance\n        .get(\"manga/\" + manga.id)\n        .then(function (response) {\n          commit(\"LOAD_MANGA\", response.data);\n        })\n        .catch(function (error) {\n          return error;\n        });\n    },\n  },\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}